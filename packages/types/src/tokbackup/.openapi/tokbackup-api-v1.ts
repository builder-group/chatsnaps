/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/fetchTikTokData": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Fetch TikTok video data and transcript
         * @description Retrieves data and optionally the transcript for a specified TikTok video
         */
        get: {
            parameters: {
                query: {
                    /** @description URL of the TikTok video */
                    video: string;
                    /** @description Flag to include the video transcript */
                    get_transcript?: boolean;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Successful response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data?: {
                                /** @description Unique identifier of the video */
                                id?: string;
                                /** @description Video description or caption */
                                desc?: string;
                                /** @description Timestamp of video creation */
                                createTime?: string;
                                /** @description Location where the video was created */
                                locationCreated?: string;
                                video?: {
                                    /** @description URL of the video cover image */
                                    cover?: string;
                                    /** @description URL to play the video */
                                    playAddr?: string;
                                    /** @description URL to download the video */
                                    downloadAddr?: string;
                                    /** @description Duration of the video in seconds */
                                    duration?: number;
                                    /** @description Width of the video in pixels */
                                    width?: number;
                                    /** @description Height of the video in pixels */
                                    height?: number;
                                };
                                author?: {
                                    /** @description TikTok username of the video creator */
                                    uniqueId?: string;
                                    /** @description Display name of the video creator */
                                    nickname?: string;
                                    /** @description URL of the author's large avatar image */
                                    avatarLarger?: string;
                                    /** @description Author's profile signature or bio */
                                    signature?: string;
                                };
                                music?: {
                                    /** @description Unique identifier of the music track */
                                    id?: string;
                                    /** @description Title of the music track */
                                    title?: string;
                                    /** @description URL to play the music */
                                    playUrl?: string;
                                    /** @description URL of the music's large cover image */
                                    coverLarge?: string;
                                    /** @description Display name of the music creator */
                                    authorName?: string;
                                };
                                stats?: {
                                    /** @description Number of likes */
                                    diggCount?: string;
                                    /** @description Number of shares */
                                    shareCount?: string;
                                    /** @description Number of comments */
                                    commentCount?: string;
                                    /** @description Number of views */
                                    playCount?: string;
                                };
                                /** @description Array of hashtags used in the video */
                                textExtra?: {
                                    hashtagName?: string;
                                }[];
                            };
                            /** @description WebVTT format transcript of the video (if requested) */
                            subtitles?: string;
                        };
                    };
                };
                /** @description Bad request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Video not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
